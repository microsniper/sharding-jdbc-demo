server:
  port: 8084
spring:
  shardingsphere:
    datasource:
      names: master0,master0slave,master1,master1slave
      master0: # 数据源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds0?characterEncoding=utf-8
        username: root
        password: root
      master0slave:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds0?characterEncoding=utf-8
        username: root
        password: root
      master1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds1?characterEncoding=utf-8
        username: root
        password: root
      master1slave:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds1?characterEncoding=utf-8
        username: root
        password: root
    sharding:  # 分表配置
      tables:
        order:
          actual-data-nodes: ds$->{0..1}.order_${0..2}
          key-generator:
            column: id
            type: SNOWFLAKE
          table-strategy:
            inline: # inline 表达式
              sharding-column: id
              algorithm-expression: order_${id % 3}
      default-database-strategy: # 分库配置
        inline:
          sharding-column: id
          algorithm-expression: ds$->{id % 2}
      master-slave-rules: # 读写分离配置
        ds0:
          master-data-source-name: master0
          slave-data-source-names: master0slave
        ds1:
          master-data-source-name: master1
          slave-data-source-names: master1slave
    props: # 显示SQL
      sql:
        show: true
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
      - com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
logging:
  level:
    root: info
    com.sniper.shardingdbtablereadwrite.mapper: debug
mybatis:
  mapper-locations: classpath*:/mapper/*.xml
